--- 
- name: Create VMs
  hosts: localhost
  connection: local
  vars_files:
    - vars/vars.yml
    - vars/azure_vms.yml
  roles:
    - azure_vms

- name: Add hosts type
  hosts: localhost
  connection: local
  vars_files:
    - vars/vars.yml
    - vars/azure_vms.yml
  tasks:
    - include: tasks/add_hosts.yml
      with_items: "{{ azure_vms }}"
      loop_control:
        loop_var: user

# - name: jp script
#   gather_facts: no
#   hosts: lang_conf_servers
#   remote_user: "{{ azure_server_user }}"
#   vars_files:
#     - vars/vars.yml
#   vars:
#     ansible_user: "{{ azure_server_user }}"
#     ansible_password: "{{ azure_server_pass }}"
#     ansible_port: 5986
#     ansible_connection: winrm
#     ansible_winrm_server_cert_validation: ignore
#   tasks:
#     - include: tasks/toJp.yml

- name: Java Install
  hosts: install_java_servers
  connection: local
  vars_files:
    - vars/vars.yml
    - vars/azure_vms.yml
    - vars/install_application.yml
  roles:
    - windows-java

# - name: restore Config
#   gather_facts: no
#   hosts: servers
#   remote_user: "{{ azure_server_user }}"
#   vars_files:
#     - vars/vars.yml
#   vars:
#     ansible_user: "{{ azure_server_user }}"
#     ansible_password: "{{ azure_server_pass }}"
#     ansible_port: 5986
#     ansible_connection: winrm
#     ansible_winrm_server_cert_validation: ignore
#   tasks:
#     - include: tasks/restoreSettings.yml

#- name: debug
#  tasks:
#    - debug: var=group_names
#    - debug: msg="{{ play_hosts }}"
#    - debug: msg="{{ inventory_hostname }}"
#    - debug: var=hostvars[inventory_hostname]          
#    - debug: msg="groups={{groups}}"